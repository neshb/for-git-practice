{"ast":null,"code":"var _jsxFileName = \"/Users/nareshbarfa/Documents/onboarding_traning/week02assignment01/src/Components/Pages/Products.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addToCart } from \"../../Redux/Action\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Products = props => {\n  _s();\n\n  const {\n    sellerId\n  } = useParams();\n  const [productsData, setProductsData] = useState([]);\n  const allProducts = useSelector(state => state.allProducts.products);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const filterProduct = allProducts.filter(product => {\n      if (product.sellerId === parseInt(sellerId)) {\n        return product;\n      }\n    });\n    setProductsData(filterProduct);\n  }, [sellerId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"m-4\",\n      children: [\" Seller \", sellerId, \" products  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      productsData: productsData,\n      type: \"addToCart\",\n      dispatchHandler: addToCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Products, \"2XRBQEWFyvoFglKOXnfJs1IN0r4=\", false, function () {\n  return [useParams, useSelector, useDispatch];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/Users/nareshbarfa/Documents/onboarding_traning/week02assignment01/src/Components/Pages/Products.js"],"names":["React","useEffect","useState","useParams","useSelector","useDispatch","addToCart","Card","Products","props","sellerId","productsData","setProductsData","allProducts","state","products","dispatch","filterProduct","filter","product","parseInt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAeP,SAAS,EAA9B;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAMW,WAAW,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACD,WAAN,CAAkBE,QAA9B,CAA/B;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,aAAa,GAAGJ,WAAW,CAACK,MAAZ,CAAoBC,OAAD,IAAa;AAClD,UAAIA,OAAO,CAACT,QAAR,KAAqBU,QAAQ,CAACV,QAAD,CAAjC,EAA6C;AACzC,eAAOS,OAAP;AACH;AACJ,KAJqB,CAAtB;AAKAP,IAAAA,eAAe,CAACK,aAAD,CAAf;AACH,GAPQ,EAON,CAACP,QAAD,CAPM,CAAT;AAQA,sBACI;AAAA,4BACA;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA,6BAA6BA,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,IAAD;AAAM,MAAA,YAAY,EAAEC,YAApB;AAAkC,MAAA,IAAI,EAAE,WAAxC;AAAqD,MAAA,eAAe,EAAEL;AAAtE;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AA0BH,CAvCD;;GAAME,Q;UACmBL,S,EAEDC,W,EACHC,W;;;KAJfG,Q;AAyCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addToCart } from \"../../Redux/Action\";\nimport Card from \"./Card\"\n\nconst Products = (props) => {\n    const { sellerId } = useParams();\n    const [productsData, setProductsData] = useState([])\n    const allProducts = useSelector((state) => state.allProducts.products);\n    const dispatch = useDispatch()\n    useEffect(() => {\n        const filterProduct = allProducts.filter((product) => {\n            if (product.sellerId === parseInt(sellerId)) {\n                return product\n            }\n        })\n        setProductsData(filterProduct)\n    }, [sellerId])\n    return (\n        <>\n        <h1 className='m-4'> Seller {sellerId} products  </h1>\n        <Card productsData={productsData} type={\"addToCart\"} dispatchHandler={addToCart}  />\n        {/* <div className=\"row row-cols-1 row-cols-md-2 g-4 m-4\">\n            {\n                productsData ? productsData.map((product) =>\n                    <div className=\"col\" key={product.id} >\n                        <div className=\"card\" >\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">Product Name : {product.name} </h5>\n                                <p className=\"card-text\">Cost : {product.cost} </p>\n                                <p className=\"card-text\">Quantity : {product.quantity} </p>\n                                <p className=\"text-muted\">{product.sellerName}  {product.category} </p>\n                                <button type=\"button\" className=\"btn btn-outline-dark\" onClick={() => {\n                                    dispatch(addToCart(product))\n                                }} >Add to Cart </button>\n                            </div>\n                        </div>\n                    </div>\n                )\n                    : <h1>Seller Not Found </h1>\n            }\n        </div> */}\n        </>\n    )\n}\n\nexport default Products"]},"metadata":{},"sourceType":"module"}