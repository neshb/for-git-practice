{"ast":null,"code":"var _jsxFileName = \"/Users/nareshbarfa/Documents/onboarding_traning/week02assignment01/src/Components/Pages/Products.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addToCart } from \"../../Redux/Action\";\nimport ProductCard from \"./ProductCard\";\nimport HeadingTag from \"./HeadingTag\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Products = props => {\n  _s();\n\n  const {\n    sellerId\n  } = useParams();\n  const [productsData, setProductsData] = useState([]);\n  const allProducts = useSelector(state => state.allProducts.products);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const filterProduct = allProducts.filter(product => {\n      if (product.sellerId === parseInt(sellerId)) {\n        return product;\n      }\n    });\n    setProductsData(filterProduct);\n  }, [sellerId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeadingTag, {\n      name: `Seller ${sellerId} products`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProductCard, {\n      productsData: productsData,\n      type: \"addToCart\",\n      dispatchHandler: addToCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Products, \"2XRBQEWFyvoFglKOXnfJs1IN0r4=\", false, function () {\n  return [useParams, useSelector, useDispatch];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/Users/nareshbarfa/Documents/onboarding_traning/week02assignment01/src/Components/Pages/Products.js"],"names":["React","useEffect","useState","useParams","useSelector","useDispatch","addToCart","ProductCard","HeadingTag","Products","props","sellerId","productsData","setProductsData","allProducts","state","products","dispatch","filterProduct","filter","product","parseInt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAeR,SAAS,EAA9B;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAMY,WAAW,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACD,WAAN,CAAkBE,QAA9B,CAA/B;AACA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,aAAa,GAAGJ,WAAW,CAACK,MAAZ,CAAoBC,OAAD,IAAa;AACpD,UAAIA,OAAO,CAACT,QAAR,KAAqBU,QAAQ,CAACV,QAAD,CAAjC,EAA6C;AAC3C,eAAOS,OAAP;AACD;AACF,KAJqB,CAAtB;AAKAP,IAAAA,eAAe,CAACK,aAAD,CAAf;AACD,GAPQ,EAON,CAACP,QAAD,CAPM,CAAT;AAQA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAG,UAASA,QAAS;AAArC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AACE,MAAA,YAAY,EAAEC,YADhB;AAEE,MAAA,IAAI,EAAE,WAFR;AAGE,MAAA,eAAe,EAAEN;AAHnB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAUD,CAvBD;;GAAMG,Q;UACiBN,S,EAEDC,W,EACHC,W;;;KAJbI,Q;AAyBN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addToCart } from \"../../Redux/Action\";\nimport ProductCard from \"./ProductCard\";\nimport HeadingTag from \"./HeadingTag\";\n\nconst Products = (props) => {\n  const { sellerId } = useParams();\n  const [productsData, setProductsData] = useState([]);\n  const allProducts = useSelector((state) => state.allProducts.products);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const filterProduct = allProducts.filter((product) => {\n      if (product.sellerId === parseInt(sellerId)) {\n        return product;\n      }\n    });\n    setProductsData(filterProduct);\n  }, [sellerId]);\n  return (\n    <>\n      <HeadingTag name={`Seller ${sellerId} products`} />\n      <ProductCard\n        productsData={productsData}\n        type={\"addToCart\"}\n        dispatchHandler={addToCart}\n      />\n    </>\n  );\n};\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}